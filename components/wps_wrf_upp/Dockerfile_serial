FROM centos:latest
MAINTAINER Jamie Wolff <jwolff@ucar.edu> or Michelle Harrold <harrold@ucar.edu>
# 
# This Dockerfile compiles WRF from source during "docker build" step
ENV WRF_VERSION 4.0.2
ENV WPS_VERSION 4.0.2
ENV UPP_VERSION 3.1.1
#
RUN yum -y update
RUN yum -y install file gcc gcc-gfortran gcc-c++ glibc.i686 libgcc.i686 libpng-devel jasper jasper-devel ksh hostname m4 make perl tar tcsh time wget which zlib zlib-devel epel-release which wget 
#
# now get 3rd party EPEL builds of netcdf dependencies
RUN yum -y install netcdf-devel.x86_64 netcdf-fortran-devel.x86_64 netcdf-fortran.x86_64 hdf5.x86_64
#
WORKDIR /wrf
#
# Download original sources
#
RUN curl -SL https://github.com/wrf-model/WRF/archive/v${WRF_VERSION}.tar.gz | tar zxC /wrf \
 && curl -SL https://github.com/wrf-model/WPS/archive/v${WPS_VERSION}.tar.gz | tar zxC /wrf \
 && curl -SL http://www.dtcenter.org/upp/users/downloads/UPP_releases/DTC_upp_v${UPP_VERSION}.tar.gz | tar zxC /wrf
#
# Set environment for interactive container shells
#
RUN echo export LDFLAGS="-lm" >> /etc/bashrc \ 
 && echo export NETCDF=/wrf/netcdf_links >> /etc/bashrc \
 && echo export JASPERINC=/usr/include/jasper/ >> /etc/bashrc \
 && echo export JASPERLIB=/usr/lib64/ >> /etc/bashrc \
 && echo export LD_LIBRARY_PATH="/usr/lib64" >> /etc/bashrc \
 && echo export PATH="/usr/lib64/bin:$PATH" >> /etc/bashrc \
 && echo setenv LDFLAGS "-lm" >> /etc/csh.cshrc \
 && echo setenv NETCDF "/wrf/netcdf_links" >> /etc/csh.cshrc \
 && echo setenv JASPERINC "/usr/include/jasper/" >> /etc/csh.cshrc \
 && echo setenv JASPERLIB "/usr/lib64/" >> /etc/csh.cshrc \
 && echo setenv LD_LIBRARY_PATH "/usr/lib64" >> /etc/csh.cshrc \
 && echo setenv PATH "/usr/lib64/bin:$PATH" >> /etc/csh.cshrc
#
# Build WRF first
# 
RUN pwd \ 
 && mkdir netcdf_links \
 && ln -sf /usr/include/ netcdf_links/include \
 && ln -sf /usr/lib64 netcdf_links/lib \
 && export NETCDF=/wrf/netcdf_links \
 && export JASPERINC=/usr/include/jasper/ \
 && export JASPERLIB=/usr/lib64/ \
 && cd ./WRF-${WRF_VERSION} \
# input 32 and 1 to configure script (gfortran for serial build)
 && ./configure <<< $'32\r1\r' \
# && echo -e "32\r1\r" | ./configure
# && sed -i -e '/^DM_CC/ s/$/ -DMPI2_SUPPORT/' ./configure.wrf \
 && /bin/csh ./compile em_real > compile_wrf.log 2>&1
# && /bin/csh ./compile em_real <<< $'y\r'
#
# Build WPS second
#
RUN pwd \
 && cd ./WPS-${WPS_VERSION} \
 && export NETCDF=/wrf/netcdf_links \
 && export JASPERINC=/usr/include/jasper \
 && export JASPERLIB=/usr/lib64 \
# input 1 to configure script (gfortran for serial build)
 && ./configure <<< $'1\r' \
 && sed -i -e 's/-L$(NETCDF)\/lib/-L$(NETCDF)\/lib -lnetcdff /' ./configure.wps \
 && /bin/csh ./compile > compile_wps.log 2>&1
#
# Build UPP third
#
RUN cd ./UPPV3.1 \
 && export NETCDF=/wrf/netcdf_links \
 && export WRF_DIR=/wrf_serial/WRF-${WRF_VERSION} \
# input 7 to configure script (for gfortran serial build)
 && ./configure <<< $'7\r' \
 && sed -i -e 's/-lnetcdf/-lnetcdf -lnetcdff/' ./configure.upp \
 && /bin/csh ./compile > compile_upp.log 2>&1
#
ENV LD_LIBRARY_PATH /usr/lib64/lib
ENV PATH  /usr/lib64/bin:$PATH
#
# copy in a couple custom scripts
COPY docker-clean /wrf
RUN chmod +x /wrf/docker-clean
#COPY run-wrf /wrf
#RUN chmod +x /wrf/run-wrf
# CMD ["/wrf/run-wrf"]
COPY run-wps-wrf-upp /wrf
RUN chmod +x /wrf/run-wps-wrf-upp
CMD ["/wrf/run-wps-wrf-upp"]
